/* tslint:disable */
/* eslint-disable */
/**
 * Shopee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface GetWalletOverviewRequest
 */
export interface GetWalletOverviewRequest {
    /**
     * 
     * @type {UserV2WalletOverviewMeta}
     * @memberof GetWalletOverviewRequest
     */
    'meta': UserV2WalletOverviewMeta;
    /**
     * 
     * @type {object}
     * @memberof GetWalletOverviewRequest
     */
    'data'?: object;
}
/**
 * 
 * @export
 * @interface GetWalletOverviewResponse
 */
export interface GetWalletOverviewResponse {
    /**
     * 
     * @type {number}
     * @memberof GetWalletOverviewResponse
     */
    'code'?: number;
    /**
     * 
     * @type {GetWalletOverviewResponseData}
     * @memberof GetWalletOverviewResponse
     */
    'data'?: GetWalletOverviewResponseData;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponse
     */
    'msg'?: string;
}
/**
 * 
 * @export
 * @interface GetWalletOverviewResponseData
 */
export interface GetWalletOverviewResponseData {
    /**
     * 
     * @type {Array<object>}
     * @memberof GetWalletOverviewResponseData
     */
    'pending_guide_processes'?: Array<object>;
    /**
     * 
     * @type {GetWalletOverviewResponseDataBuyerWallet}
     * @memberof GetWalletOverviewResponseData
     */
    'buyer_wallet'?: GetWalletOverviewResponseDataBuyerWallet;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseData
     */
    'coin_amount'?: string;
    /**
     * 
     * @type {number}
     * @memberof GetWalletOverviewResponseData
     */
    'screen_lock_status'?: number;
}
/**
 * 
 * @export
 * @interface GetWalletOverviewResponseDataBuyerWallet
 */
export interface GetWalletOverviewResponseDataBuyerWallet {
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'user_id'?: string;
    /**
     * 
     * @type {number}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'user_status'?: number;
    /**
     * 
     * @type {number}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'wallet_provider'?: number;
    /**
     * 
     * @type {GetWalletOverviewResponseDataBuyerWalletWalletBalance}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'wallet_balance'?: GetWalletOverviewResponseDataBuyerWalletWalletBalance;
    /**
     * 
     * @type {boolean}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'hide_refund_wallet'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'hide_cashback_wallet'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'hide_special_cashback_wallet'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetWalletOverviewResponseDataBuyerWallet
     */
    'is_merchant'?: boolean;
}
/**
 * 
 * @export
 * @interface GetWalletOverviewResponseDataBuyerWalletWalletBalance
 */
export interface GetWalletOverviewResponseDataBuyerWalletWalletBalance {
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'cashback'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'incoming'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'main'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'non_transferable_balance'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'outgoing'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'pending'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'refund'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'special_cashback'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'total'?: string;
    /**
     * 
     * @type {string}
     * @memberof GetWalletOverviewResponseDataBuyerWalletWalletBalance
     */
    'transferable_balance'?: string;
}
/**
 * 
 * @export
 * @interface UserV2WalletOverviewMeta
 */
export interface UserV2WalletOverviewMeta {
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'sdk_version'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'latitude'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'app_package_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'device_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'os_version'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'app_version'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'sz_blackbox'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'rn_version'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'device_model'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'longitude'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'source': string;
    /**
     * 
     * @type {number}
     * @memberof UserV2WalletOverviewMeta
     */
    'os': number;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'device_brand'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'device_id': string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'arch'?: string;
    /**
     * 
     * @type {number}
     * @memberof UserV2WalletOverviewMeta
     */
    'network_type'?: number;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'device_fingerprint'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'black_box'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'device_ip'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserV2WalletOverviewMeta
     */
    'is_jailbreak'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserV2WalletOverviewMeta
     */
    'language'?: string;
}

/**
 * ShopeePayApi - axios parameter creator
 * @export
 */
export const ShopeePayApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Get wallet overview
         * @param {GetWalletOverviewRequest} [getWalletOverviewRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getWalletOverview: async (getWalletOverviewRequest?: GetWalletOverviewRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/user/v2/wallet-overview`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication xToken required
            await setApiKeyToObject(localVarHeaderParameter, "x-token", configuration)


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getWalletOverviewRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ShopeePayApi - functional programming interface
 * @export
 */
export const ShopeePayApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ShopeePayApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @summary Get wallet overview
         * @param {GetWalletOverviewRequest} [getWalletOverviewRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getWalletOverview(getWalletOverviewRequest?: GetWalletOverviewRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetWalletOverviewResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getWalletOverview(getWalletOverviewRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ShopeePayApi - factory interface
 * @export
 */
export const ShopeePayApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ShopeePayApiFp(configuration)
    return {
        /**
         * 
         * @summary Get wallet overview
         * @param {GetWalletOverviewRequest} [getWalletOverviewRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getWalletOverview(getWalletOverviewRequest?: GetWalletOverviewRequest, options?: any): AxiosPromise<GetWalletOverviewResponse> {
            return localVarFp.getWalletOverview(getWalletOverviewRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getWalletOverview operation in ShopeePayApi.
 * @export
 * @interface ShopeePayApiGetWalletOverviewRequest
 */
export interface ShopeePayApiGetWalletOverviewRequest {
    /**
     * 
     * @type {GetWalletOverviewRequest}
     * @memberof ShopeePayApiGetWalletOverview
     */
    readonly getWalletOverviewRequest?: GetWalletOverviewRequest
}

/**
 * ShopeePayApi - object-oriented interface
 * @export
 * @class ShopeePayApi
 * @extends {BaseAPI}
 */
export class ShopeePayApi extends BaseAPI {
    /**
     * 
     * @summary Get wallet overview
     * @param {ShopeePayApiGetWalletOverviewRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShopeePayApi
     */
    public getWalletOverview(requestParameters: ShopeePayApiGetWalletOverviewRequest = {}, options?: AxiosRequestConfig) {
        return ShopeePayApiFp(this.configuration).getWalletOverview(requestParameters.getWalletOverviewRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


